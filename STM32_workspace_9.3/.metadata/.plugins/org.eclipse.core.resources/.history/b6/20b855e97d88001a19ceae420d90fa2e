#include<stdio.h>
#include<pthread.h>
#include<unistd.h>
#include<semaphore.h>
#include"game.h"
#include"leds_control.h"
#include "fifo.h"
#define SIZELINE 50


int main(void){
	FILE* config = NULL;
	config = fopen("/home/cedric/Atollic/TrueSTUDIO/STM32_workspace_9.3/101_multithread_p4/src/config.txt", "r");
	char newline[SIZELINE];
	while (fgets(newline, SIZELINE, config) != NULL){
		printf("%s", newline);
		for (int indextext = 0; newline[indextext] != '\0' ; indextext++) {

		}
	}

	fclose(config);

	openLink();
	pthread_t thread_read;
	pthread_t thread_app;
	pthread_t thread_send;
	pthread_t thread_timer;
	init_queue(&p_queue_read);
	init_queue(&p_queue_display);
	sem_init(&semaphore_input, 0, 0);

	printf("Creation thread de lecture\n");
	pthread_create(&thread_read, NULL, read_input, NULL);
	printf("Creation thread d'application\n");
	pthread_create(&thread_app, NULL, application, NULL);
	printf("Creation thread d'envoi\n");
	pthread_create(&thread_send, NULL, show_board, NULL);
	printf("Creation thread de timer\n");
	pthread_create(&thread_timer, NULL, timer, NULL);


	(void)pthread_join(thread_read, NULL);
	(void)pthread_join(thread_app, NULL);
	(void)pthread_join(thread_send, NULL);
	(void)pthread_join(thread_timer, NULL);


	sem_destroy(&semaphore_input);
	sem_destroy(&semaphore_display);
	closeLink();

	return 0;
}
